{"mappings":"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","sources":["<anon>","bankist/script.js"],"sourcesContent":["\"use strict\";\nconst account1 = {\n    owner: \"Sourav Das\",\n    movements: [\n        400,\n        455.25,\n        -802.5,\n        32000,\n        -648.27,\n        -133.9,\n        71.93,\n        3700\n    ],\n    interestRate: 2.75,\n    pin: 1111,\n    movementsDates: [\n        \"2022-11-18T21:31:17.178Z\",\n        \"2019-12-27T07:42:02.383Z\",\n        \"2020-08-28T09:15:04.904Z\",\n        \"2020-04-01T10:17:24.185Z\",\n        \"2020-05-08T14:11:59.604Z\",\n        \"2023-09-27T17:01:17.194Z\",\n        \"2023-09-29T23:36:17.929Z\",\n        \"2023-10-01T10:51:36.790Z\"\n    ],\n    currency: \"INR\",\n    locale: \"en-IN\"\n};\nconst account2 = {\n    owner: \"Jonas Schmedtmann\",\n    movements: [\n        200,\n        455.23,\n        -306.5,\n        25000,\n        -642.21,\n        -133.9,\n        79.97,\n        1300\n    ],\n    interestRate: 1.2,\n    pin: 2222,\n    movementsDates: [\n        \"2019-11-18T21:31:17.178Z\",\n        \"2019-12-23T07:42:02.383Z\",\n        \"2020-01-28T09:15:04.904Z\",\n        \"2020-04-01T10:17:24.185Z\",\n        \"2020-05-08T14:11:59.604Z\",\n        \"2023-09-27T17:01:17.194Z\",\n        \"2023-09-29T23:36:17.929Z\",\n        \"2023-10-01T10:51:36.790Z\"\n    ],\n    currency: \"EUR\",\n    locale: \"pt-PT\"\n};\nconst account3 = {\n    owner: \"Jessica Davis\",\n    movements: [\n        5000,\n        3400,\n        -150,\n        -790,\n        -3210,\n        -1000,\n        8500,\n        -30\n    ],\n    interestRate: 1.5,\n    pin: 3333,\n    movementsDates: [\n        \"2019-11-01T13:15:33.035Z\",\n        \"2019-11-30T09:48:16.867Z\",\n        \"2019-12-25T06:04:23.907Z\",\n        \"2020-01-25T14:18:46.235Z\",\n        \"2020-02-05T16:33:06.386Z\",\n        \"2020-04-10T14:43:26.374Z\",\n        \"2020-06-25T18:49:59.371Z\",\n        \"2020-07-26T12:01:20.894Z\"\n    ],\n    currency: \"USD\",\n    locale: \"en-US\"\n};\nconst accounts = [\n    account1,\n    account2,\n    account3\n];\nconst labelWelcome = document.querySelector(\".welcome\");\nconst labelDate = document.querySelector(\".date\");\nconst labelBalance = document.querySelector(\".balance__value\");\nconst labelSumIn = document.querySelector(\".summary__value--in\");\nconst labelSumOut = document.querySelector(\".summary__value--out\");\nconst labelSumInterest = document.querySelector(\".summary__value--interest\");\nconst labelTimer = document.querySelector(\".timer\");\nconst containerApp = document.querySelector(\".app\");\nconst containerMovements = document.querySelector(\".movements\");\nconst btnLogin = document.querySelector(\".login__btn\");\nconst btnTransfer = document.querySelector(\".form__btn--transfer\");\nconst btnLoan = document.querySelector(\".form__btn--loan\");\nconst btnClose = document.querySelector(\".form__btn--close\");\nconst btnSort = document.querySelector(\".btn--sort\");\nconst inputLoginUsername = document.querySelector(\".login__input--user\");\nconst inputLoginPin = document.querySelector(\".login__input--pin\");\nconst inputTransferTo = document.querySelector(\".form__input--to\");\nconst inputTransferAmount = document.querySelector(\".form__input--amount\");\nconst inputLoanAmount = document.querySelector(\".form__input--loan-amount\");\nconst inputCloseUsername = document.querySelector(\".form__input--user\");\nconst inputClosePin = document.querySelector(\".form__input--pin\");\nconst formatMovementDate = function(date, locale) {\n    const calcDisplayPassed = (date1, date2)=>Math.round(Math.abs(date2 - date1) / 86400000);\n    const daysPassed = calcDisplayPassed(new Date(), date);\n    console.log(daysPassed);\n    if (daysPassed === 0) return \"Today\";\n    if (daysPassed === 1) return \"Yesterday\";\n    if (daysPassed <= 7) return `${daysPassed} days ago`;\n    return new Intl.DateTimeFormat(locale).format(date);\n};\nconst formatCur = function(value, locale, currency) {\n    return new Intl.NumberFormat(locale, {\n        style: \"currency\",\n        currency: currency\n    }).format(value);\n};\nconst displayMovements = function(acc, sort = false) {\n    containerMovements.innerHTML = \"\";\n    const movs = sort ? acc.movements.slice().sort((a, b)=>a - b) : acc.movements;\n    movs.forEach(function(mov, i) {\n        const type = mov > 0 ? \"deposit\" : \"withdrawal\";\n        const date = new Date(acc.movementsDates[i]);\n        const displayDate = formatMovementDate(date, acc.locale);\n        const formattedMov = formatCur(mov, acc.locale, acc.currency);\n        const html = `\r\n      <div class=\"movements__row\">\r\n        <div class=\"movements__type movements__type--${type}\">${i + 1} ${type}</div>\r\n    <div class=\"movements__date\">${displayDate}</div>\r\n        <div class=\"movements__value\">${formattedMov}</div>\r\n      </div>\r\n    `;\n        containerMovements.insertAdjacentHTML(\"afterbegin\", html);\n    });\n};\nconst calcDisplayBalance = function(acc) {\n    acc.balance = acc.movements.reduce((acc, mov)=>acc + mov, 0);\n    labelBalance.textContent = formatCur(acc.balance, acc.locale, acc.currency);\n};\nconst calcDisplaySummary = function(acc) {\n    const incomes = acc.movements.filter((mov)=>mov > 0).reduce((acc, mov)=>acc + mov, 0);\n    labelSumIn.textContent = formatCur(incomes, acc.locale, acc.currency);\n    const out = acc.movements.filter((mov)=>mov < 0).reduce((acc, mov)=>acc + mov, 0);\n    labelSumOut.textContent = formatCur(Math.abs(out), acc.locale, acc.currency);\n    const interest = acc.movements.filter((mov)=>mov > 0).map((deposit)=>deposit * acc.interestRate / 100).filter((int, i, arr)=>{\n        return int >= 1;\n    }).reduce((acc, int)=>acc + int, 0);\n    labelSumInterest.textContent = formatCur(interest, acc.locale, acc.currency);\n};\nconst createUsernames = function(accs) {\n    accs.forEach(function(acc) {\n        acc.username = acc.owner.toLowerCase().split(\" \").map((name)=>name[0]).join(\"\");\n    });\n};\ncreateUsernames(accounts);\nconst updateUI = function(acc) {\n    displayMovements(acc);\n    calcDisplayBalance(acc);\n    calcDisplaySummary(acc);\n};\nconst startLogOutTimer = function() {\n    const tick = function() {\n        const min = String(Math.trunc(time / 60)).padStart(2, 0);\n        const sec = String(time % 60).padStart(2, 0);\n        labelTimer.textContent = `${min}:${sec}`;\n        if (time === 0) {\n            clearInterval(timer);\n            labelWelcome.textContent = \"Log in to get started\";\n            containerApp.style.opacity = 0;\n        }\n        time--;\n    };\n    let time = 120;\n    tick();\n    const timer = setInterval(tick, 1000);\n    return timer;\n};\nlet currentAccount, timer;\nbtnLogin.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    currentAccount = accounts.find((acc)=>acc.username === inputLoginUsername.value);\n    console.log(currentAccount);\n    if (currentAccount?.pin === +inputLoginPin.value) {\n        labelWelcome.textContent = `Welcome back, ${currentAccount.owner.split(\" \")[0]}`;\n        containerApp.style.opacity = 100;\n        const now = new Date();\n        const options = {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            second: \"numeric\",\n            day: \"numeric\",\n            month: \"numeric\",\n            year: \"numeric\"\n        };\n        labelDate.textContent = new Intl.DateTimeFormat(currentAccount.locale, options).format(now);\n        inputLoginUsername.value = inputLoginPin.value = \"\";\n        inputLoginPin.blur();\n        if (timer) clearInterval(timer);\n        timer = startLogOutTimer();\n        updateUI(currentAccount);\n    }\n});\nbtnTransfer.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    const amount = +inputTransferAmount.value;\n    const receiverAcc = accounts.find((acc)=>acc.username === inputTransferTo.value);\n    inputTransferAmount.value = inputTransferTo.value = \"\";\n    if (amount > 0 && receiverAcc && currentAccount.balance >= amount && receiverAcc?.username !== currentAccount.username) {\n        currentAccount.movements.push(-amount);\n        receiverAcc.movements.push(amount);\n        currentAccount.movementsDates.push(new Date().toISOString());\n        receiverAcc.movementsDates.push(new Date().toISOString());\n        updateUI(currentAccount);\n        clearInterval(timer);\n        timer = startLogOutTimer();\n    }\n});\nbtnLoan.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    const amount = Math.floor(inputLoanAmount.value);\n    if (amount > 0 && currentAccount.movements.some((mov)=>mov >= amount * 0.1)) setTimeout(function() {\n        currentAccount.movements.push(amount);\n        currentAccount.movementsDates.push(new Date().toISOString());\n        updateUI(currentAccount);\n        clearInterval(timer);\n        timer = startLogOutTimer();\n    }, 2500);\n    inputLoanAmount.value = \"\";\n});\nbtnClose.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    if (inputCloseUsername.value === currentAccount.username && +inputClosePin.value === currentAccount.pin) {\n        const index = accounts.findIndex((acc)=>acc.username === currentAccount.username);\n        console.log(index);\n        accounts.splice(index, 1);\n        containerApp.style.opacity = 0;\n    }\n    inputCloseUsername.value = inputClosePin.value = \"\";\n});\nlet sorted = false;\nbtnSort.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    displayMovements(currentAccount, !sorted);\n    sorted = !sorted;\n});\n\n//# sourceMappingURL=index.ea29c7a9.js.map\n","'use strict';\r\n\r\nconst account1 = {\r\n  owner: 'Sourav Das',\r\n  movements: [400, 455.25, -802.5, 32000, -648.27, -133.9, 71.93, 3700],\r\n  interestRate: 2.75,\r\n  pin: 1111,\r\n\r\n  movementsDates: [\r\n    '2022-11-18T21:31:17.178Z',\r\n    '2019-12-27T07:42:02.383Z',\r\n    '2020-08-28T09:15:04.904Z',\r\n    '2020-04-01T10:17:24.185Z',\r\n    '2020-05-08T14:11:59.604Z',\r\n    '2023-09-27T17:01:17.194Z',\r\n    '2023-09-29T23:36:17.929Z',\r\n    '2023-10-01T10:51:36.790Z',\r\n  ],\r\n  currency: 'INR',\r\n  locale: 'en-IN',\r\n};\r\n\r\nconst account2 = {\r\n  owner: 'Jonas Schmedtmann',\r\n  movements: [200, 455.23, -306.5, 25000, -642.21, -133.9, 79.97, 1300],\r\n  interestRate: 1.2,\r\n  pin: 2222,\r\n\r\n  movementsDates: [\r\n    '2019-11-18T21:31:17.178Z',\r\n    '2019-12-23T07:42:02.383Z',\r\n    '2020-01-28T09:15:04.904Z',\r\n    '2020-04-01T10:17:24.185Z',\r\n    '2020-05-08T14:11:59.604Z',\r\n    '2023-09-27T17:01:17.194Z',\r\n    '2023-09-29T23:36:17.929Z',\r\n    '2023-10-01T10:51:36.790Z',\r\n  ],\r\n  currency: 'EUR',\r\n  locale: 'pt-PT',\r\n};\r\n\r\nconst account3 = {\r\n  owner: 'Jessica Davis',\r\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\r\n  interestRate: 1.5,\r\n  pin: 3333,\r\n\r\n  movementsDates: [\r\n    '2019-11-01T13:15:33.035Z',\r\n    '2019-11-30T09:48:16.867Z',\r\n    '2019-12-25T06:04:23.907Z',\r\n    '2020-01-25T14:18:46.235Z',\r\n    '2020-02-05T16:33:06.386Z',\r\n    '2020-04-10T14:43:26.374Z',\r\n    '2020-06-25T18:49:59.371Z',\r\n    '2020-07-26T12:01:20.894Z',\r\n  ],\r\n  currency: 'USD',\r\n  locale: 'en-US',\r\n};\r\n\r\nconst accounts = [account1, account2, account3];\r\n\r\nconst labelWelcome = document.querySelector('.welcome');\r\nconst labelDate = document.querySelector('.date');\r\nconst labelBalance = document.querySelector('.balance__value');\r\nconst labelSumIn = document.querySelector('.summary__value--in');\r\nconst labelSumOut = document.querySelector('.summary__value--out');\r\nconst labelSumInterest = document.querySelector('.summary__value--interest');\r\nconst labelTimer = document.querySelector('.timer');\r\n\r\nconst containerApp = document.querySelector('.app');\r\nconst containerMovements = document.querySelector('.movements');\r\n\r\nconst btnLogin = document.querySelector('.login__btn');\r\nconst btnTransfer = document.querySelector('.form__btn--transfer');\r\nconst btnLoan = document.querySelector('.form__btn--loan');\r\nconst btnClose = document.querySelector('.form__btn--close');\r\nconst btnSort = document.querySelector('.btn--sort');\r\n\r\nconst inputLoginUsername = document.querySelector('.login__input--user');\r\nconst inputLoginPin = document.querySelector('.login__input--pin');\r\nconst inputTransferTo = document.querySelector('.form__input--to');\r\nconst inputTransferAmount = document.querySelector('.form__input--amount');\r\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\r\nconst inputCloseUsername = document.querySelector('.form__input--user');\r\nconst inputClosePin = document.querySelector('.form__input--pin');\r\n\r\nconst formatMovementDate = function (date, locale) {\r\n  const calcDisplayPassed = (date1, date2) =>\r\n    Math.round(Math.abs(date2 - date1) / (1000 * 60 * 60 * 24));\r\n\r\n  const daysPassed = calcDisplayPassed(new Date(), date);\r\n  console.log(daysPassed);\r\n\r\n  if (daysPassed === 0) return 'Today';\r\n  if (daysPassed === 1) return 'Yesterday';\r\n  if (daysPassed <= 7) return `${daysPassed} days ago`;\r\n\r\n  return new Intl.DateTimeFormat(locale).format(date);\r\n};\r\n\r\nconst formatCur = function (value, locale, currency) {\r\n  return new Intl.NumberFormat(locale, {\r\n    style: 'currency',\r\n    currency: currency,\r\n  }).format(value);\r\n};\r\n\r\nconst displayMovements = function (acc, sort = false) {\r\n  containerMovements.innerHTML = '';\r\n\r\n  const movs = sort\r\n    ? acc.movements.slice().sort((a, b) => a - b)\r\n    : acc.movements;\r\n\r\n  movs.forEach(function (mov, i) {\r\n    const type = mov > 0 ? 'deposit' : 'withdrawal';\r\n\r\n    const date = new Date(acc.movementsDates[i]);\r\n    const displayDate = formatMovementDate(date, acc.locale);\r\n\r\n    const formattedMov = formatCur(mov, acc.locale, acc.currency);\r\n\r\n    const html = `\r\n      <div class=\"movements__row\">\r\n        <div class=\"movements__type movements__type--${type}\">${\r\n      i + 1\r\n    } ${type}</div>\r\n    <div class=\"movements__date\">${displayDate}</div>\r\n        <div class=\"movements__value\">${formattedMov}</div>\r\n      </div>\r\n    `;\r\n\r\n    containerMovements.insertAdjacentHTML('afterbegin', html);\r\n  });\r\n};\r\n\r\nconst calcDisplayBalance = function (acc) {\r\n  acc.balance = acc.movements.reduce((acc, mov) => acc + mov, 0);\r\n  labelBalance.textContent = formatCur(acc.balance, acc.locale, acc.currency);\r\n};\r\n\r\nconst calcDisplaySummary = function (acc) {\r\n  const incomes = acc.movements\r\n    .filter(mov => mov > 0)\r\n    .reduce((acc, mov) => acc + mov, 0);\r\n  labelSumIn.textContent = formatCur(incomes, acc.locale, acc.currency);\r\n\r\n  const out = acc.movements\r\n    .filter(mov => mov < 0)\r\n    .reduce((acc, mov) => acc + mov, 0);\r\n  labelSumOut.textContent = formatCur(Math.abs(out), acc.locale, acc.currency);\r\n\r\n  const interest = acc.movements\r\n    .filter(mov => mov > 0)\r\n    .map(deposit => (deposit * acc.interestRate) / 100)\r\n    .filter((int, i, arr) => {\r\n      return int >= 1;\r\n    })\r\n    .reduce((acc, int) => acc + int, 0);\r\n  labelSumInterest.textContent = formatCur(interest, acc.locale, acc.currency);\r\n};\r\n\r\nconst createUsernames = function (accs) {\r\n  accs.forEach(function (acc) {\r\n    acc.username = acc.owner\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .map(name => name[0])\r\n      .join('');\r\n  });\r\n};\r\ncreateUsernames(accounts);\r\n\r\nconst updateUI = function (acc) {\r\n  displayMovements(acc);\r\n\r\n  calcDisplayBalance(acc);\r\n\r\n  calcDisplaySummary(acc);\r\n};\r\n\r\nconst startLogOutTimer = function () {\r\n  const tick = function () {\r\n    const min = String(Math.trunc(time / 60)).padStart(2, 0);\r\n    const sec = String(time % 60).padStart(2, 0);\r\n\r\n    labelTimer.textContent = `${min}:${sec}`;\r\n\r\n    if (time === 0) {\r\n      clearInterval(timer);\r\n      labelWelcome.textContent = 'Log in to get started';\r\n      containerApp.style.opacity = 0;\r\n    }\r\n\r\n    time--;\r\n  };\r\n  let time = 120;\r\n\r\n  tick();\r\n  const timer = setInterval(tick, 1000);\r\n  return timer;\r\n};\r\n\r\nlet currentAccount, timer;\r\n\r\nbtnLogin.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n\r\n  currentAccount = accounts.find(\r\n    acc => acc.username === inputLoginUsername.value\r\n  );\r\n  console.log(currentAccount);\r\n\r\n  if (currentAccount?.pin === +inputLoginPin.value) {\r\n    labelWelcome.textContent = `Welcome back, ${\r\n      currentAccount.owner.split(' ')[0]\r\n    }`;\r\n    containerApp.style.opacity = 100;\r\n\r\n    const now = new Date();\r\n    const options = {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      second: 'numeric',\r\n      day: 'numeric',\r\n      month: 'numeric',\r\n      year: 'numeric',\r\n    };\r\n\r\n    labelDate.textContent = new Intl.DateTimeFormat(\r\n      currentAccount.locale,\r\n      options\r\n    ).format(now);\r\n\r\n    inputLoginUsername.value = inputLoginPin.value = '';\r\n    inputLoginPin.blur();\r\n\r\n    if (timer) clearInterval(timer);\r\n    timer = startLogOutTimer();\r\n\r\n    updateUI(currentAccount);\r\n  }\r\n});\r\n\r\nbtnTransfer.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  const amount = +inputTransferAmount.value;\r\n  const receiverAcc = accounts.find(\r\n    acc => acc.username === inputTransferTo.value\r\n  );\r\n  inputTransferAmount.value = inputTransferTo.value = '';\r\n\r\n  if (\r\n    amount > 0 &&\r\n    receiverAcc &&\r\n    currentAccount.balance >= amount &&\r\n    receiverAcc?.username !== currentAccount.username\r\n  ) {\r\n    currentAccount.movements.push(-amount);\r\n    receiverAcc.movements.push(amount);\r\n\r\n    currentAccount.movementsDates.push(new Date().toISOString());\r\n    receiverAcc.movementsDates.push(new Date().toISOString());\r\n\r\n    updateUI(currentAccount);\r\n\r\n    clearInterval(timer);\r\n    timer = startLogOutTimer();\r\n  }\r\n});\r\n\r\nbtnLoan.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n\r\n  const amount = Math.floor(inputLoanAmount.value);\r\n\r\n  if (amount > 0 && currentAccount.movements.some(mov => mov >= amount * 0.1)) {\r\n    setTimeout(function () {\r\n      currentAccount.movements.push(amount);\r\n\r\n      currentAccount.movementsDates.push(new Date().toISOString());\r\n\r\n      updateUI(currentAccount);\r\n\r\n      clearInterval(timer);\r\n      timer = startLogOutTimer();\r\n    }, 2500);\r\n  }\r\n  inputLoanAmount.value = '';\r\n});\r\n\r\nbtnClose.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n\r\n  if (\r\n    inputCloseUsername.value === currentAccount.username &&\r\n    +inputClosePin.value === currentAccount.pin\r\n  ) {\r\n    const index = accounts.findIndex(\r\n      acc => acc.username === currentAccount.username\r\n    );\r\n    console.log(index);\r\n\r\n    accounts.splice(index, 1);\r\n\r\n    containerApp.style.opacity = 0;\r\n  }\r\n\r\n  inputCloseUsername.value = inputClosePin.value = '';\r\n});\r\n\r\nlet sorted = false;\r\nbtnSort.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  displayMovements(currentAccount, !sorted);\r\n  sorted = !sorted;\r\n});\r\n"],"names":["currentAccount","timer","accounts","owner","movements","interestRate","pin","movementsDates","currency","locale","labelWelcome","document","querySelector","labelDate","labelBalance","labelSumIn","labelSumOut","labelSumInterest","labelTimer","containerApp","containerMovements","btnLogin","btnTransfer","btnLoan","btnClose","btnSort","inputLoginUsername","inputLoginPin","inputTransferTo","inputTransferAmount","inputLoanAmount","inputCloseUsername","inputClosePin","formatMovementDate","date","daysPassed","Math","round","abs","date2","Date","console","log","Intl","DateTimeFormat","format","formatCur","value","NumberFormat","style","displayMovements","acc","sort","innerHTML","movs","slice","a","b","forEach","mov","i","type","displayDate","formattedMov","html","insertAdjacentHTML","calcDisplayBalance","balance","reduce","textContent","calcDisplaySummary","incomes","filter","out","interest","map","deposit","int","arr","createUsernames","accs","username","toLowerCase","split","name","join","updateUI","startLogOutTimer","tick","min","String","trunc","time","padStart","sec","clearInterval","opacity","setInterval","addEventListener","e","preventDefault","find","now","hour","minute","second","day","month","year","blur","amount","receiverAcc","push","toISOString","floor","some","setTimeout","index","findIndex","splice","sorted"],"version":3,"file":"index.ea29c7a9.js.map"}